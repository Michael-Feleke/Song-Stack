(function (React) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  const MyAvatarComponent = () => {
    const [avatarUrl, setAvatarUrl] = React.useState("");
    const styles = {
      avatarContainer: {
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        width: "50px",
        height: "50px",
        borderRadius: "50%",
        overflow: "hidden",
        border: "2px solid #ddd",
        backgroundColor: "#f0f0f0"
      },
      avatar: {
        width: "100%",
        height: "100%",
        objectFit: "cover"
      }
    };
    React.useEffect(() => {
      const fetchUser = async () => {
        try {
          const response = await fetch("https://randomuser.me/api/");
          const data = await response.json();
          const imageUrl = data.results[0].picture.large;
          setAvatarUrl(imageUrl);
        } catch (error) {
          console.error("Error fetching the random user image:", error);
        }
      };
      fetchUser();
    }, []);
    return /*#__PURE__*/React__default.default.createElement("div", {
      style: styles.avatarContainer
    }, avatarUrl && /*#__PURE__*/React__default.default.createElement("img", {
      src: avatarUrl,
      alt: "User Avatar",
      style: styles.avatar
    }));
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.MyAvatarComponent = MyAvatarComponent;

})(React);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi9jb21wb25lbnRzL3VzZXItYXZhdGFyLmpzeCIsImVudHJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5jb25zdCBNeUF2YXRhckNvbXBvbmVudCA9ICgpID0+IHtcclxuICBjb25zdCBbYXZhdGFyVXJsLCBzZXRBdmF0YXJVcmxdID0gdXNlU3RhdGUoXCJcIik7XHJcblxyXG4gIGNvbnN0IHN0eWxlcyA9IHtcclxuICAgIGF2YXRhckNvbnRhaW5lcjoge1xyXG4gICAgICBkaXNwbGF5OiBcImZsZXhcIixcclxuICAgICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXHJcbiAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXHJcbiAgICAgIHdpZHRoOiBcIjUwcHhcIixcclxuICAgICAgaGVpZ2h0OiBcIjUwcHhcIixcclxuICAgICAgYm9yZGVyUmFkaXVzOiBcIjUwJVwiLFxyXG4gICAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcclxuICAgICAgYm9yZGVyOiBcIjJweCBzb2xpZCAjZGRkXCIsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjZjBmMGYwXCIsXHJcbiAgICB9LFxyXG4gICAgYXZhdGFyOiB7XHJcbiAgICAgIHdpZHRoOiBcIjEwMCVcIixcclxuICAgICAgaGVpZ2h0OiBcIjEwMCVcIixcclxuICAgICAgb2JqZWN0Rml0OiBcImNvdmVyXCIsXHJcbiAgICB9LFxyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCBmZXRjaFVzZXIgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vcmFuZG9tdXNlci5tZS9hcGkvXCIpO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgY29uc3QgaW1hZ2VVcmwgPSBkYXRhLnJlc3VsdHNbMF0ucGljdHVyZS5sYXJnZTtcclxuICAgICAgICBzZXRBdmF0YXJVcmwoaW1hZ2VVcmwpO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyB0aGUgcmFuZG9tIHVzZXIgaW1hZ2U6XCIsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBmZXRjaFVzZXIoKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuYXZhdGFyQ29udGFpbmVyfT5cclxuICAgICAge2F2YXRhclVybCAmJiAoXHJcbiAgICAgICAgPGltZyBzcmM9e2F2YXRhclVybH0gYWx0PVwiVXNlciBBdmF0YXJcIiBzdHlsZT17c3R5bGVzLmF2YXRhcn0gLz5cclxuICAgICAgKX1cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNeUF2YXRhckNvbXBvbmVudDtcclxuIiwiQWRtaW5KUy5Vc2VyQ29tcG9uZW50cyA9IHt9XG5pbXBvcnQgTXlBdmF0YXJDb21wb25lbnQgZnJvbSAnLi4vY29tcG9uZW50cy91c2VyLWF2YXRhcidcbkFkbWluSlMuVXNlckNvbXBvbmVudHMuTXlBdmF0YXJDb21wb25lbnQgPSBNeUF2YXRhckNvbXBvbmVudCJdLCJuYW1lcyI6WyJNeUF2YXRhckNvbXBvbmVudCIsImF2YXRhclVybCIsInNldEF2YXRhclVybCIsInVzZVN0YXRlIiwic3R5bGVzIiwiYXZhdGFyQ29udGFpbmVyIiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsIndpZHRoIiwiaGVpZ2h0IiwiYm9yZGVyUmFkaXVzIiwib3ZlcmZsb3ciLCJib3JkZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJhdmF0YXIiLCJvYmplY3RGaXQiLCJ1c2VFZmZlY3QiLCJmZXRjaFVzZXIiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJpbWFnZVVybCIsInJlc3VsdHMiLCJwaWN0dXJlIiwibGFyZ2UiLCJlcnJvciIsImNvbnNvbGUiLCJSZWFjdCIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsInNyYyIsImFsdCIsIkFkbWluSlMiLCJVc2VyQ29tcG9uZW50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztFQUVBLE1BQU1BLGlCQUFpQixHQUFHQSxNQUFNO0lBQzlCLE1BQU0sQ0FBQ0MsU0FBUyxFQUFFQyxZQUFZLENBQUMsR0FBR0MsY0FBUSxDQUFDLEVBQUUsQ0FBQyxDQUFBO0VBRTlDLEVBQUEsTUFBTUMsTUFBTSxHQUFHO0VBQ2JDLElBQUFBLGVBQWUsRUFBRTtFQUNmQyxNQUFBQSxPQUFPLEVBQUUsTUFBTTtFQUNmQyxNQUFBQSxjQUFjLEVBQUUsUUFBUTtFQUN4QkMsTUFBQUEsVUFBVSxFQUFFLFFBQVE7RUFDcEJDLE1BQUFBLEtBQUssRUFBRSxNQUFNO0VBQ2JDLE1BQUFBLE1BQU0sRUFBRSxNQUFNO0VBQ2RDLE1BQUFBLFlBQVksRUFBRSxLQUFLO0VBQ25CQyxNQUFBQSxRQUFRLEVBQUUsUUFBUTtFQUNsQkMsTUFBQUEsTUFBTSxFQUFFLGdCQUFnQjtFQUN4QkMsTUFBQUEsZUFBZSxFQUFFLFNBQUE7T0FDbEI7RUFDREMsSUFBQUEsTUFBTSxFQUFFO0VBQ05OLE1BQUFBLEtBQUssRUFBRSxNQUFNO0VBQ2JDLE1BQUFBLE1BQU0sRUFBRSxNQUFNO0VBQ2RNLE1BQUFBLFNBQVMsRUFBRSxPQUFBO0VBQ2IsS0FBQTtLQUNELENBQUE7RUFFREMsRUFBQUEsZUFBUyxDQUFDLE1BQU07RUFDZCxJQUFBLE1BQU1DLFNBQVMsR0FBRyxZQUFZO1FBQzVCLElBQUk7RUFDRixRQUFBLE1BQU1DLFFBQVEsR0FBRyxNQUFNQyxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQTtFQUMxRCxRQUFBLE1BQU1DLElBQUksR0FBRyxNQUFNRixRQUFRLENBQUNHLElBQUksRUFBRSxDQUFBO1VBQ2xDLE1BQU1DLFFBQVEsR0FBR0YsSUFBSSxDQUFDRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNDLE9BQU8sQ0FBQ0MsS0FBSyxDQUFBO1VBQzlDeEIsWUFBWSxDQUFDcUIsUUFBUSxDQUFDLENBQUE7U0FDdkIsQ0FBQyxPQUFPSSxLQUFLLEVBQUU7RUFDZEMsUUFBQUEsT0FBTyxDQUFDRCxLQUFLLENBQUMsdUNBQXVDLEVBQUVBLEtBQUssQ0FBQyxDQUFBO0VBQy9ELE9BQUE7T0FDRCxDQUFBO0VBRURULElBQUFBLFNBQVMsRUFBRSxDQUFBO0tBQ1osRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUVOLG9CQUNFVyxzQkFBQSxDQUFBQyxhQUFBLENBQUEsS0FBQSxFQUFBO01BQUtDLEtBQUssRUFBRTNCLE1BQU0sQ0FBQ0MsZUFBQUE7RUFBZ0IsR0FBQSxFQUNoQ0osU0FBUyxpQkFDUjRCLHNCQUFBLENBQUFDLGFBQUEsQ0FBQSxLQUFBLEVBQUE7RUFBS0UsSUFBQUEsR0FBRyxFQUFFL0IsU0FBVTtFQUFDZ0MsSUFBQUEsR0FBRyxFQUFDLGFBQWE7TUFBQ0YsS0FBSyxFQUFFM0IsTUFBTSxDQUFDVyxNQUFBQTtFQUFPLEdBQUUsQ0FFN0QsQ0FBQyxDQUFBO0VBRVYsQ0FBQzs7RUM5Q0RtQixPQUFPLENBQUNDLGNBQWMsR0FBRyxFQUFFLENBQUE7RUFFM0JELE9BQU8sQ0FBQ0MsY0FBYyxDQUFDbkMsaUJBQWlCLEdBQUdBLGlCQUFpQjs7Ozs7OyJ9
